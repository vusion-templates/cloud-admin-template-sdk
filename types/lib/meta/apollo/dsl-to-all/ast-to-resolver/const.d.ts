export declare const F_ALLOW_IN = 1, F_ALLOW_CALL: number, F_ALLOW_UNPARATH_NEW: number, F_FUNC_BODY: number, F_DIRECTIVE_CTX: number, F_SEMICOLON_OPT: number;
export declare const S_TFFF = 1, S_TFFT: number, S_FFFF = 0, S_TFTF: number, S_TTFF: number;
export declare const E_FTT: number, E_TTF: number, E_TTT: number, E_TFF = 1, E_FFT: number, E_TFT: number;
export declare const Precedence: {
    Sequence: number;
    Yield: number;
    Assignment: number;
    Conditional: number;
    ArrowFunction: number;
    LogicalOR: number;
    LogicalAND: number;
    BitwiseOR: number;
    BitwiseXOR: number;
    BitwiseAND: number;
    Equality: number;
    Relational: number;
    BitwiseSHIFT: number;
    Additive: number;
    Multiplicative: number;
    Exponentiation: number;
    Await: number;
    Unary: number;
    Postfix: number;
    OptionalChaining: number;
    Call: number;
    New: number;
    TaggedTemplate: number;
    Member: number;
    Primary: number;
};
